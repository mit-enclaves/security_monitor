# Assumes: $(PYTHON)
# Assumes: $(BUILD_DIR)
# Assumes: $(CC)
# Assumes: $(OBJCOPY)

# Flags
SM_CFLAGS := $(CFLAGS)
SM_LDFLAGS := $(LDFLAGS)

# Common Sources
SM_COMMON_SRC := \
	$(SM_SRC_DIR)/api/mail_accept.c \
	$(SM_SRC_DIR)/api/mail_send.c \
	$(SM_SRC_DIR)/api/mail_receive.c \
	$(SM_SRC_DIR)/api/region_update.c \
	$(SM_SRC_DIR)/common/lock_region_iff_valid_metadata.c \
	$(SM_SRC_DIR)/clib/memcpy.c \
	$(SM_SRC_DIR)/clib/memcpy_virt.c \
	$(SM_SRC_DIR)/clib/memset.c \
	$(SM_SRC_DIR)/common/syscall_helpers.S \
	$(SM_SRC_DIR)/common/handle_llc_changes.c \
	$(SM_SRC_DIR)/common/flush_llc_region.c \
	$(PLATFORM_DIR)/platform_panic.S \
	$(PLATFORM_DIR)/platform_clean_core.S \
	$(PLATFORM_DIR)/platform_purge_core.S \
	$(PLATFORM_DIR)/platform_set_enclave_page_table.c \
	$(PLATFORM_DIR)/platform_interrupts.c \
	$(PLATFORM_DIR)/platform_memory_protection_common.c \
	$(PLATFORM_DIR)/platform_control_spec.c \


## SM Enclave Handler

# Linker Script
SM_ENCLAVE_LD := $(BUILD_DIR)/sm.enclave.lds
# Preprocessor fills out linker script constants
$(SM_ENCLAVE_LD): $(SM_SRC_DIR)/sm.enclave.lds.in $(BUILD_DIR)
	$(CC) -E -x c $(addprefix -I , $(PLATFORM_DIR)) $(FLAGS_DEBUG_ENCLAVE) $< | grep -v '^#' > $@

# Targets
HANDLER_ELF := $(BUILD_DIR)/sm.enclave.elf
HANDLER_BIN := $(BUILD_DIR)/sm.enclave.bin

SM_ENCLAVE_DEBUG_SRC := \
	$(SM_SRC_DIR)/kernel/console.c \
	$(SM_SRC_DIR)/kernel/mcall_enclave.c \
	$(PLATFORM_DIR)/htif/htif.c \
	$(PLATFORM_DIR)/htif/htif_util.c \

# Sources
SM_ENCLAVE_SRC := \
	$(SM_COMMON_SRC) \
	$(PLATFORM_DIR)/platform_helper.c \
	$(PLATFORM_DIR)/platform_memory_protection_enclave.c \
	$(SM_SRC_DIR)/clib/memncmp.c \
	$(SM_SRC_DIR)/handle_enclave/entry_from_enclave.S \
	$(SM_SRC_DIR)/handle_enclave/api_call_from_enclave.c \
	$(SM_SRC_DIR)/handle_enclave/enclave_aex.c \
	$(SM_SRC_DIR)/handle_enclave/handlers/enclave_timer_interrupt_handler.c \
	$(SM_SRC_DIR)/handle_enclave/handlers/enclave_external_interrupt_handler.c \
	$(SM_SRC_DIR)/handle_enclave/handlers/enclave_software_interrupt_handler.c \
	$(SM_SRC_DIR)/api/get_public_field.c \
	$(SM_SRC_DIR)/api/region_block.c \
	$(SM_SRC_DIR)/api/region_check_owned.c \
	$(SM_SRC_DIR)/api/region_owner.c \
	$(SM_SRC_DIR)/api/enclave_exit.c \
	$(SM_SRC_DIR)/api/enclave_get_keys.c \

ifeq ($(DEBUG_ENCLAVE), 1)
SM_ENCLAVE_SRC += $(SM_ENCLAVE_DEBUG_SRC)
endif

# Headers
SM_INCLUDES := \
	$(PLATFORM_DIR) \
	$(API_DIR) \
	$(SM_SRC_DIR) \

# Rules
$(HANDLER_ELF): $(SM_ENCLAVE_SRC) $(SM_ENCLAVE_LD) $(BUILD_DIR)
	$(CC) $(SM_CFLAGS) $(addprefix -I , $(SM_INCLUDES)) $(SM_LDFLAGS) -T $(SM_ENCLAVE_LD) $(SM_ENCLAVE_SRC) -o $@

$(HANDLER_BIN): $(HANDLER_ELF)
	$(OBJCOPY) -O binary --only-section=.text --only-section=.rodata --only-section=.srodata* --only-section=.data --only-section=.sdata --only-section=.bss --only-section=.sbss $< $@

## SM

# Linker Script
SM_LD := $(BUILD_DIR)/sm.lds
# Preprocessor fills out linker script constants
$(SM_LD) : $(SM_SRC_DIR)/sm.lds.in $(BUILD_DIR)
	$(CC) -E -x c $(addprefix -I , $(PLATFORM_DIR)) $(FLAGS_DEBUG_ENCLAVE) $< | grep -v '^#' > $@

# Targets
SM_ELF:=$(BUILD_DIR)/sm.elf
SM_BIN:=$(BUILD_DIR)/sm.bin

# Sources
SM_SRC := \
	$(SM_COMMON_SRC) \
	$(PLATFORM_DIR)/stacks.S \
	$(PLATFORM_DIR)/platform_init.c \
	$(PLATFORM_DIR)/platform_interrupt_other_cores.c \
	$(PLATFORM_DIR)/platform_wait_for_interrupt.c \
	$(PLATFORM_DIR)/platform_core_init.c \
	$(PLATFORM_DIR)/platform_jump_to_untrusted.c \
	$(PLATFORM_DIR)/platform_memory_protection_untrusted.c \
	$(PLATFORM_DIR)/platform_helper.c \
	$(PLATFORM_DIR)/htif/htif.c \
	$(PLATFORM_DIR)/htif/htif_util.c \
	$(SM_SRC_DIR)/clib/strcmp.c \
	$(SM_SRC_DIR)/clib/strlen.c \
	$(SM_SRC_DIR)/clib/strcpy.c \
	$(SM_SRC_DIR)/crypto/ed25519/add_scalar.c \
	$(SM_SRC_DIR)/crypto/ed25519/fe.c \
	$(SM_SRC_DIR)/crypto/ed25519/ge.c \
	$(SM_SRC_DIR)/crypto/ed25519/sc.c \
	$(SM_SRC_DIR)/crypto/ed25519/sha512.c \
	$(SM_SRC_DIR)/crypto/ed25519/sign.c \
	$(SM_SRC_DIR)/crypto/ed25519/keypair.c \
	$(SM_SRC_DIR)/common/lock_region_iff_free_metadata_pages.c \
	$(SM_SRC_DIR)/common/sm_state.c \
	$(SM_SRC_DIR)/common/enclave_handler.S \
	$(SM_SRC_DIR)/common/load_page_table_entry.c \
	$(SM_SRC_DIR)/init/init.S \
	$(SM_SRC_DIR)/init/init.c \
	$(SM_SRC_DIR)/kernel/console.c \
	$(SM_SRC_DIR)/kernel/fdt.c \
	$(SM_SRC_DIR)/kernel/kernel_init.c \
	$(SM_SRC_DIR)/kernel/mcall.c \
	$(SM_SRC_DIR)/kernel/handler_illegal_insn.c \
	$(SM_SRC_DIR)/api/enclave_create.c \
	$(SM_SRC_DIR)/api/enclave_delete.c \
	$(SM_SRC_DIR)/api/enclave_enter.c \
	$(SM_SRC_DIR)/api/enclave_init.c \
	$(SM_SRC_DIR)/api/enclave_load_handler.c \
	$(SM_SRC_DIR)/api/enclave_load_page_table.c \
	$(SM_SRC_DIR)/api/enclave_load_page.c \
	$(SM_SRC_DIR)/api/enclave_metadata_pages.c \
	$(SM_SRC_DIR)/api/enclave_get_attest.c \
	$(SM_SRC_DIR)/api/get_public_field.c \
	$(SM_SRC_DIR)/api/region_assign.c \
	$(SM_SRC_DIR)/api/region_block.c \
	$(SM_SRC_DIR)/api/region_check_owned.c \
	$(SM_SRC_DIR)/api/region_free.c \
	$(SM_SRC_DIR)/api/region_metadata_create.c \
	$(SM_SRC_DIR)/api/region_metadata_pages.c \
	$(SM_SRC_DIR)/api/region_metadata_start.c \
	$(SM_SRC_DIR)/api/region_owner.c \
	$(SM_SRC_DIR)/api/region_state.c \
	$(SM_SRC_DIR)/api/region_cache_partitionning.c \
	$(SM_SRC_DIR)/api/region_flush.c \
	$(SM_SRC_DIR)/api/thread_delete.c \
	$(SM_SRC_DIR)/api/thread_load.c \
	$(SM_SRC_DIR)/api/thread_metadata_pages.c \
	$(SM_SRC_DIR)/handle_untrusted/entry_from_untrusted.S \
	$(SM_SRC_DIR)/handle_untrusted/api_call_from_untrusted.c \
	$(SM_SRC_DIR)/handle_untrusted/handlers/untrusted_software_interrupt_handler.c \

# Rules
$(SM_ELF): $(SM_SRC) $(SM_LD) $(BUILD_DIR) $(HANDLER_BIN)
	$(CC) $(SM_CFLAGS) $(addprefix -I , $(SM_INCLUDES)) $(SM_LDFLAGS) -T $(SM_LD) $(SM_SRC) -D ENCLAVE_HANDLER_FILE=\"$(HANDLER_BIN)\" -o $@

$(SM_BIN): $(SM_ELF)
	$(OBJCOPY) -O binary \
	--only-section=.text \
	--only-section=.rodata \
	--only-section=.srodata* \
	--only-section=.data \
	--only-section=.sdata \
	--only-section=.bss  \
	--only-section=.sbss  \
	--keep-symbol=__htif_base \
	--keep-symbol=tohost \
	--keep-symbol=fromhost \
	$< $@

.PHONY: sm
sm: $(SM_BIN)

ALL+=sm
